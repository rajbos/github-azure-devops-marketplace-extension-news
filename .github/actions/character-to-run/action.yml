name: 'character to run'
description: 'a description'

# Were we can define the inputs that our action will accept
inputs:
  characters:
    required: true
  artifactName:
    required: true
  TwitterConsumerAPIKey:
    required: true
  TwitterConsumerAPISecretKey:
    required: true
  TwitterAccessToken:
    required: true
  TwitterAccessTokenSecret:
    required: true
  BlobStorageConnectionString:
    required: true

runs:
  using: "composite"
  steps:
    # - uses: browser-actions/setup-chrome@c785b87e244131f27c9f19c1a33e2ead956ab7ce # v1.7.3
    #   id: setup-chrome
    #   with:
    #     install-chromedriver: true

    - name: Download artifact from build job
      uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
      with:
        name: ${{ inputs.artifactName }}
        path: ./ArtifactFolder

    - name: App Settings Variable Substitution
      uses: rajbos-actions/variable-substitution@ae7b1f3676ae374dc70282e6b9650bc50b611222 # v1.2
      with:
        files: 'ArtifactFolder/appsettings.json'
      env:
        TwitterConsumerAPIKey: ${{ inputs.TwitterConsumerAPIKey }}
        TwitterConsumerAPISecretKey: ${{ inputs.TwitterConsumerAPISecretKey }}
        TwitterAccessToken: ${{ inputs.TwitterAccessToken }}
        TwitterAccessTokenSecret: ${{ inputs.TwitterAccessTokenSecret }}
        BlobStorageConnectionString: ${{ inputs.BlobStorageConnectionString }}

    # - uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4.1.0
    #   with:
    #     dotnet-version: 8.x

    - name: Set selenium-manager permissions
      shell: pwsh
      run: |
        Write-Host "::group::Check selenium-manager permissions"

        echo "Modding path"
        chmod +x /home/runner/work/github-azure-devops-marketplace-extension-news/github-azure-devops-marketplace-extension-news/ArtifactFolder/selenium-manager/linux/selenium-manager

        Write-Host "::endgroup::"

    - name: Check .NET and System.Text.Json versions
      shell: pwsh
      run: |
        dotnet --info
        cd .\ArtifactFolder
        # find the version of system.text.json
        ls -la
        $fileName = Get-ChildItem -Recurse | Select-String -Pattern "System.Text.Json" | Select-Object -First 1
        # show the version of the file
        Write-Host "File name: $fileName"

        # delete the System.Text.Json file
        # Write-Host "Deleting System.Text.Json file"
        # Remove-Item "System.Text.Json.dll" -Force

    - name: Run the GitHubActionsNews application
      shell: pwsh
      run: |
        Write-Host "::group::Run the GitHubActionsNews application"
        cd .\ArtifactFolder
        dotnet GitHubActionsNews.dll ${{ inputs.characters }}
        Write-Host "::endgroup::"
